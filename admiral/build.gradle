apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    //kotlin支持
    api rootProject.ext.dependencies["kotlin-stdlib-jdk8"]
    //androidx
    api(rootProject.ext.dependencies["androidxAppcompat"]) {
    }
    api rootProject.ext.dependencies["androidxMaterial"]

    //rxjava3
    api rootProject.ext.dependencies["rxjava3"]
    api(rootProject.ext.dependencies["rxandroid3"]) {
        exclude module: 'rxjava'
    }
    //rxcache3
    api(project(":lib_common_third:lib_rxcache3")) {
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'gson'
    }
    api(rootProject.ext.dependencies["rxlifecycle4"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
        exclude module: 'kotlin-stdlib-jdk7'
    }
    api(rootProject.ext.dependencies["rxlifecycle4-android"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
        exclude module: 'kotlin-stdlib-jdk7'
    }
    api(rootProject.ext.dependencies["rxpermissions2"]) {
        exclude module: 'rxjava'
        exclude module: 'support-annotations'
    }
    //okhttp network
    api(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    api(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    api(rootProject.ext.dependencies["retrofit-adapter-rxjava3"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    api(rootProject.ext.dependencies["okhttp3"]) {
        exclude module: 'okio'
    }
    api rootProject.ext.dependencies["okio"]
    api rootProject.ext.dependencies["glide"]
    kapt(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }
    //tools
    compileOnly rootProject.ext.dependencies["javax.annotation"]
    api rootProject.ext.dependencies["gson"]
}
